function switchArchaicFont( event ) {
    var i, len, node, txt, line, lnr;

    event.stopImmediatePropagation();
    $(".btn1 ul" ).removeClass( "menuActive" );
    if( jbNS.columns_config[ 1 ] > 2 ) {
        myAlert( "sorry, Iliad or Odyssey only", false, null );
        return;
    }
    if( $( this ).text() === "archaic greek" ) {
        $( this ).text( "polytonic greek" );
        jbNS.gfr.contents().find( ".greek" ).css( "font-family", "Archaic Greek" );
        jbNS.gfr.contents().find( "a, h2, h4" ).css( "font-family", "Open Sans" );
        len = jbNS.greekanchors.length;
        for( i = 0; i < len; i += 1 ) {
            node = jbNS.greekanchors[i].parentNode.lastChild;
            txt = node.textContent;
            txt = txt.replace( /\s|,|\.|;|:|á¾½/g, "" );
            txt = uni2beta( txt, false ).toUpperCase();
            line = jbNS.greekanchors[i].textContent;
            lnr = parseInt( line.substr( 1 ) );
            if( lnr === 0 ) {
                continue;
            }
            if( lnr % 2 === 1 ) {
                txt = txt.split( "" ).reverse().join( "" );
            } // reverse uneven linenrs (they started r to l)
            node.textContent = " " + txt;
        }
    } else {
        $( this ).text( "archaic greek" );
        if( jbNS.columns_config[ 1 ] ) { iFrameLoad( "greekframe", jbNS.filenames[ 1 ][ jbNS.columns_config[ 1 ] - 1 ] );}
    }
}
